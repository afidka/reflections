How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    You can compare and find out where the bug is.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can see older versions and who changed it, so you can compare or restore to a previous version of a file.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: you choose when and can add a comment for the purpose
    Cons: some versions can have no meaning, nothing new.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git is made to use with projects with multiple files and others to save versions of a file where you are working on without relations with other files.

How can you use the commands git log and git diff to view the history of files?

    Git log to see all commits that have been done and git diff to see differences between 2 commits, lines added and lines deleted.

How might using version control make you more confident to make changes that
could break something?

    I can go back to a previous commit to check for what I changed, to restore to a version without errors.

Now that you have your workspace set up, what do you want to try using Git for?

    Mmmm... Everything?